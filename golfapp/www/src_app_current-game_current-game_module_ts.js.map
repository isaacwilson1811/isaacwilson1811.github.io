{"version":3,"sources":["./src/app/current-game/current-game-routing.module.ts","./src/app/current-game/current-game.module.ts","./src/app/current-game/current-game.page.ts","./src/app/current-game/current-game.page.scss","./src/app/current-game/current-game.page.html"],"names":[],"mappings":"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","file":"src_app_current-game_current-game_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CurrentGamePage } from './current-game.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CurrentGamePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CurrentGamePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CurrentGamePageRoutingModule } from './current-game-routing.module';\n\nimport { CurrentGamePage } from './current-game.page';\nimport { RandomMiddleNamePipe } from '../custom-pipes/random-middle-name.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CurrentGamePageRoutingModule\n  ],\n  declarations: [CurrentGamePage, RandomMiddleNamePipe]\n})\nexport class CurrentGamePageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SharedAppStateService } from '../services/shared-app-state.service';\nimport { FireStoreService } from '../services/firestore.service';\n\ninterface HoleCard {\n  title: string;\n  subtitle: string;\n  subtitle2: string;\n  scoreList: PlayerScore[];\n}\ninterface PlayerScore {\n  playerName: string,\n  strokes: number\n}\nclass PlayerTotals {\n  constructor(name:string, strokesList: number[]){\n    this.name = name;\n    this.strokesList = strokesList;\n    this.totalStrokes = 0;\n  }\n  name: string\n  strokesList: number[]\n  totalStrokes: number;\n  calcTotalStrokes() {\n    this.totalStrokes = this.strokesList.reduce((acc, cur) => {\n      return acc + cur}, 0);\n  }\n}\n\n@Component({\n  selector: 'app-current-game',\n  templateUrl: './current-game.page.html',\n  styleUrls: ['./current-game.page.scss'],\n})\nexport class CurrentGamePage implements OnInit {\n\n  public formData: any;\n\n  // save and load this data, but remake the object from the class with the totaling method\n  public holeCardList: HoleCard[] = [];\n  public totalsCard = [];\n\n  constructor(\n    private appState: SharedAppStateService,\n    private dbService: FireStoreService,\n    private router: Router\n  ){  \n    if (this.router.getCurrentNavigation().extras.state) {\n        const state = this.router.getCurrentNavigation().extras.state;\n        this.formData = state;\n      }\n  }\n\n  ngOnInit() {\n    this.createHoleCards();\n    this.createTotalsCard();\n  }\n\n  createHoleCards(){\n    for (let i = 0; i < 9; i++){\n      const parArr = this.getParArr();\n      const holeCard:HoleCard = {\n        title: `Hole ${i+1}`,\n        subtitle: `Par ${parArr[i].par}`,\n        subtitle2: `Yards ${parArr[i].yards}`,\n        scoreList: []\n      }\n      this.formData.playersList.forEach((player:any)=>{\n        const playerScore: PlayerScore = {\n          playerName: `${player.first_name} ${player.last_name}`,\n          strokes: 0\n        };\n        holeCard.scoreList.push(playerScore);\n      });\n      this.holeCardList.push(holeCard);\n    }\n  }\n\n  private getParArr(): any[] {\n    const CourseID:number = JSON.parse(localStorage.getItem('GOLFDATA_selectedCourseID'));\n    const CourseList:any[] = JSON.parse(localStorage.getItem('GOLFDATA_courseList'));\n    const parArr = [];\n    switch(CourseID){\n      case 18300:{\n        CourseList[0].details.holes.forEach((hole:any)=>{\n          const thing = {par: hole.teeBoxes[0].par, yards: hole.teeBoxes[0].yards}\n          parArr.push(thing);\n        });\n        break;\n      }\n      case 11819:{\n        CourseList[1].details.holes.forEach((hole:any)=>{\n          const thing = {par: hole.teeBoxes[0].par, yards: hole.teeBoxes[0].yards}\n          parArr.push(thing);\n        });\n        break;\n      }\n      case 19002:{\n        CourseList[2].details.holes.forEach((hole:any)=>{\n          const thing = {par: hole.teeBoxes[0].par, yards: hole.teeBoxes[0].yards}\n          parArr.push(thing);\n        });\n        break;\n      }\n    }\n    return parArr;\n  }\n\n  createTotalsCard(){\n    this.formData.playersList.forEach((player:any) => {\n      const playerTotals = new PlayerTotals(`${player.first_name} ${player.last_name}`, [0,0,0,0,0,0,0,0,0]);\n      this.totalsCard.push(playerTotals);\n    })\n  }\n\n  calcTotals(playerName:string, hole:number, value:number, ):void {\n    this.totalsCard.forEach((player:any)=>{\n      if (player.name === playerName){\n        player.strokesList[hole] = value;\n        player.calcTotalStrokes();\n      }\n    });\n  }\n\n  saveData() {\n    const normalObject = JSON.parse(JSON.stringify(this.totalsCard));\n    const DTO = { holeCardList: this.holeCardList, totalsCard: normalObject };\n    this.dbService.saveData(DTO);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjdXJyZW50LWdhbWUucGFnZS5zY3NzIn0= */\";","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>\\n      GOLF\\n    </ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button color=\\\"primary\\\" (click)=\\\"saveData()\\\">Save Current ScoreCard Data</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n\\n  <!-- <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\">GOLF</ion-title>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button></ion-back-button>\\n      </ion-buttons>\\n    </ion-toolbar>\\n  </ion-header> -->\\n\\n<!-- Dude, sick nested for loop reference for your two way data binding -->\\n\\n  <ion-card *ngFor=\\\"let card of holeCardList; let i = index\\\">\\n    <ion-card-header>\\n      <ion-card-title>{{card.title}}</ion-card-title>\\n      <ion-card-subtitle>{{card.subtitle}}</ion-card-subtitle>\\n      <ion-card-subtitle>{{card.subtitle2}}</ion-card-subtitle>\\n    </ion-card-header>\\n  \\n    <ion-card-content>\\n      <ion-list>\\n        <ion-item *ngFor=\\\"let score of card.scoreList; let j = index\\\">\\n          <ion-input type=\\\"text\\\" value=\\\"{{score.playerName}}\\\" disabled></ion-input>\\n          <ion-label>Strokes:</ion-label>\\n          <ion-input color=\\\"primary\\\" type=\\\"number\\\" value=\\\"{{score.strokes}}\\\" min=\\\"0\\\"\\n            [(ngModel)]=\\\"holeCardList[i].scoreList[j].strokes\\\"\\n            (ngModelChange)=\\\"calcTotals(holeCardList[i].scoreList[j].playerName, i, $event)\\\"\\n            >\\n          </ion-input>\\n        </ion-item>\\n      </ion-list>\\n    </ion-card-content>\\n  </ion-card>\\n\\n<!-- TOTALS -->\\n\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>TOTALS</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-list>\\n        <ion-item *ngFor=\\\"let card of totalsCard\\\">\\n          <ion-label>{{card.name | randomMiddleName}}</ion-label>\\n          Total Strokes: {{card.totalStrokes}}\\n        </ion-item>\\n      </ion-list>\\n    </ion-card-content>\\n  </ion-card>\\n\\n<!-- <p>totalsCard</p>\\n<pre>{{totalsCard | json}}</pre>  \\n<p>formData</p>\\n<pre>{{formData | json}}</pre>\\n<p>holeCardList</p>\\n<pre>{{holeCardList | json}}</pre> -->\\n\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}